# Generated by Django 5.0.2 on 2024-02-26 17:23

import accounts.managers
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(blank=True, max_length=13, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+251xxxxxxxxx'.", regex='^\\+251\\d{9}$')])),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', accounts.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Applicant',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('age', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(13), django.core.validators.MaxValueValidator(120)])),
                ('resume', models.FileField(upload_to='resumes/')),
                ('portfolio_link', models.URLField()),
            ],
            options={
                'abstract': False,
            },
            bases=('accounts.user',),
            managers=[
                ('objects', accounts.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UniversityCoordinator',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('university', models.CharField(choices=[('Adama Science and Technology University', 'Adama Science and Technology University'), ('Addis Ababa Science and Technology University', 'Addis Ababa Science and Technology University'), ('Addis Ababa University', 'Addis Ababa University'), ('Adigrat University', 'Adigrat University'), ('Ambo University', 'Ambo University'), ('Arba Minch University', 'Arba Minch University'), ('Arsi Unuversuty', 'Arsi Unuversuty'), ('Assosa University', 'Assosa University'), ('Axum University', 'Axum University'), ('Bahir Dar University', 'Bahir Dar University'), ('Bonga University', 'Bonga University'), ('Borana University', 'Borana University'), ('Bule Hora University', 'Bule Hora University'), ('Dambi Dollo University', 'Dambi Dollo University'), ('Debark University', 'Debark University'), ('Debre Berhan University', 'Debre Berhan University'), ('Debre Markos Universityy', 'Debre Markos Universityy'), ('Debre Tabor University', 'Debre Tabor University'), ('Defence University', 'Defence University'), ('Dilla University', 'Dilla University'), ('Dire Dawa University', 'Dire Dawa University'), ('Ethiopian Civil Service University', 'Ethiopian Civil Service University'), ('Ethiopian Police University College', 'Ethiopian Police University College'), ('Gambella University', 'Gambella University'), ('Haramaya University', 'Haramaya University'), ('Hawassa University', 'Hawassa University'), ('Injibara University', 'Injibara University'), ('Jijiga University', 'Jijiga University'), ('Jimma University', 'Jimma University'), ('Jinka University', 'Jinka University'), ('Kebri Dehar University', 'Kebri Dehar University'), ('Kotebe Metropolitan University', 'Kotebe Metropolitan University'), ('Meda Walabu University', 'Meda Walabu University'), ('Mekdela Amba University', 'Mekdela Amba University'), ('Mekelle University', 'Mekelle University'), ('Mettu University', 'Mettu University'), ('Mizan Tepi University', 'Mizan Tepi University'), ('Oda Bultum University', 'Oda Bultum University'), ('Oromia State University', 'Oromia State University'), ('Raya University', 'Raya University'), ('Salale University', 'Salale University'), ('Semera University', 'Semera University'), ('University of Gondar', 'University of Gondar'), ('Wachamo University', 'Wachamo University'), ('Werabe University', 'Werabe University'), ('Wolaita Sodo University', 'Wolaita Sodo University'), ('Woldia University', 'Woldia University'), ('Wolkite University', 'Wolkite University'), ('Wollega University', 'Wollega University'), ('Wollo University', 'Wollo University')], help_text='Choose your university', max_length=100)),
                ('legal_document', models.FileField(help_text='Upload a document that proves you are assigned as a university coordinator by your university. Acceptable file formats include PDF or images. The document should contain official approval, such as a letter with a university stamp.', upload_to='university_coordinators/')),
            ],
            options={
                'verbose_name': 'University Coordinator',
                'verbose_name_plural': 'University Coordinators',
            },
            bases=('accounts.user',),
            managers=[
                ('objects', accounts.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UniversitySupervisor',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('university', models.CharField(choices=[('Adama Science and Technology University', 'Adama Science and Technology University'), ('Addis Ababa Science and Technology University', 'Addis Ababa Science and Technology University'), ('Addis Ababa University', 'Addis Ababa University'), ('Adigrat University', 'Adigrat University'), ('Ambo University', 'Ambo University'), ('Arba Minch University', 'Arba Minch University'), ('Arsi Unuversuty', 'Arsi Unuversuty'), ('Assosa University', 'Assosa University'), ('Axum University', 'Axum University'), ('Bahir Dar University', 'Bahir Dar University'), ('Bonga University', 'Bonga University'), ('Borana University', 'Borana University'), ('Bule Hora University', 'Bule Hora University'), ('Dambi Dollo University', 'Dambi Dollo University'), ('Debark University', 'Debark University'), ('Debre Berhan University', 'Debre Berhan University'), ('Debre Markos Universityy', 'Debre Markos Universityy'), ('Debre Tabor University', 'Debre Tabor University'), ('Defence University', 'Defence University'), ('Dilla University', 'Dilla University'), ('Dire Dawa University', 'Dire Dawa University'), ('Ethiopian Civil Service University', 'Ethiopian Civil Service University'), ('Ethiopian Police University College', 'Ethiopian Police University College'), ('Gambella University', 'Gambella University'), ('Haramaya University', 'Haramaya University'), ('Hawassa University', 'Hawassa University'), ('Injibara University', 'Injibara University'), ('Jijiga University', 'Jijiga University'), ('Jimma University', 'Jimma University'), ('Jinka University', 'Jinka University'), ('Kebri Dehar University', 'Kebri Dehar University'), ('Kotebe Metropolitan University', 'Kotebe Metropolitan University'), ('Meda Walabu University', 'Meda Walabu University'), ('Mekdela Amba University', 'Mekdela Amba University'), ('Mekelle University', 'Mekelle University'), ('Mettu University', 'Mettu University'), ('Mizan Tepi University', 'Mizan Tepi University'), ('Oda Bultum University', 'Oda Bultum University'), ('Oromia State University', 'Oromia State University'), ('Raya University', 'Raya University'), ('Salale University', 'Salale University'), ('Semera University', 'Semera University'), ('University of Gondar', 'University of Gondar'), ('Wachamo University', 'Wachamo University'), ('Werabe University', 'Werabe University'), ('Wolaita Sodo University', 'Wolaita Sodo University'), ('Woldia University', 'Woldia University'), ('Wolkite University', 'Wolkite University'), ('Wollega University', 'Wollega University'), ('Wollo University', 'Wollo University')], help_text='Select the university associated with the supervisor', max_length=100)),
                ('department', models.CharField(help_text='Enter the department where the supervisor is working', max_length=100)),
                ('specialization', models.CharField(help_text="Specify the supervisor's area of expertise (e.g., Machine Learning, Data Science)", max_length=100)),
            ],
            options={
                'verbose_name': 'University Supervisor',
                'verbose_name_plural': 'University Supervisors',
            },
            bases=('accounts.user',),
            managers=[
                ('objects', accounts.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Full legal name of the organization', max_length=255)),
                ('email', models.EmailField(help_text='Contact email address', max_length=254)),
                ('phone_number', models.CharField(help_text='Contact phone number', max_length=20)),
                ('organization_type', models.CharField(help_text='Type of organization (e.g., company, non-profit)', max_length=100)),
                ('website', models.URLField(blank=True, help_text='Organization website URL')),
                ('location_city', models.CharField(help_text='City where the organization is located', max_length=100)),
                ('location_state', models.CharField(help_text='State/Province where the organization is located', max_length=100)),
                ('description', models.TextField(help_text='Brief description of the organization and its mission')),
                ('logo', models.ImageField(blank=True, help_text='Organization logo', upload_to='organization_logos/')),
                ('linkedin_url', models.URLField(blank=True, help_text='LinkedIn profile URL', null=True)),
                ('registration_date', models.DateTimeField(auto_now_add=True)),
                ('supervisor', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Organization',
                'verbose_name_plural': 'Organizations',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('applicant_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='accounts.applicant')),
                ('university', models.CharField(choices=[('Adama Science and Technology University', 'Adama Science and Technology University'), ('Addis Ababa Science and Technology University', 'Addis Ababa Science and Technology University'), ('Addis Ababa University', 'Addis Ababa University'), ('Adigrat University', 'Adigrat University'), ('Ambo University', 'Ambo University'), ('Arba Minch University', 'Arba Minch University'), ('Arsi Unuversuty', 'Arsi Unuversuty'), ('Assosa University', 'Assosa University'), ('Axum University', 'Axum University'), ('Bahir Dar University', 'Bahir Dar University'), ('Bonga University', 'Bonga University'), ('Borana University', 'Borana University'), ('Bule Hora University', 'Bule Hora University'), ('Dambi Dollo University', 'Dambi Dollo University'), ('Debark University', 'Debark University'), ('Debre Berhan University', 'Debre Berhan University'), ('Debre Markos Universityy', 'Debre Markos Universityy'), ('Debre Tabor University', 'Debre Tabor University'), ('Defence University', 'Defence University'), ('Dilla University', 'Dilla University'), ('Dire Dawa University', 'Dire Dawa University'), ('Ethiopian Civil Service University', 'Ethiopian Civil Service University'), ('Ethiopian Police University College', 'Ethiopian Police University College'), ('Gambella University', 'Gambella University'), ('Haramaya University', 'Haramaya University'), ('Hawassa University', 'Hawassa University'), ('Injibara University', 'Injibara University'), ('Jijiga University', 'Jijiga University'), ('Jimma University', 'Jimma University'), ('Jinka University', 'Jinka University'), ('Kebri Dehar University', 'Kebri Dehar University'), ('Kotebe Metropolitan University', 'Kotebe Metropolitan University'), ('Meda Walabu University', 'Meda Walabu University'), ('Mekdela Amba University', 'Mekdela Amba University'), ('Mekelle University', 'Mekelle University'), ('Mettu University', 'Mettu University'), ('Mizan Tepi University', 'Mizan Tepi University'), ('Oda Bultum University', 'Oda Bultum University'), ('Oromia State University', 'Oromia State University'), ('Raya University', 'Raya University'), ('Salale University', 'Salale University'), ('Semera University', 'Semera University'), ('University of Gondar', 'University of Gondar'), ('Wachamo University', 'Wachamo University'), ('Werabe University', 'Werabe University'), ('Wolaita Sodo University', 'Wolaita Sodo University'), ('Woldia University', 'Woldia University'), ('Wolkite University', 'Wolkite University'), ('Wollega University', 'Wollega University'), ('Wollo University', 'Wollo University')], help_text='Choose your university', max_length=100)),
                ('university_id_number', models.CharField(help_text='Type your university ID', max_length=100)),
                ('batch', models.CharField(help_text='Enter your academic year or term (e.g., 3rd year)', max_length=10)),
                ('department', models.CharField(blank=True, help_text="Enter your department or major (if applicable), otherwise enter 'Freshman' or your school name", max_length=100)),
            ],
            options={
                'abstract': False,
            },
            bases=('accounts.applicant',),
            managers=[
                ('objects', accounts.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(blank=True, null=True)),
                ('object_id', models.PositiveIntegerField()),
                ('is_read', models.BooleanField(default=False)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('notify_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='accounts.applicant')),
            ],
            options={
                'ordering': ['-updated', '-created'],
                'get_latest_by': 'created',
                'indexes': [models.Index(fields=['content_type', 'object_id'], name='accounts_no_content_9af20f_idx')],
            },
        ),
    ]
