# Generated by Django 5.0.2 on 2024-02-26 17:24

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Enter the title of the post', max_length=255)),
                ('description', models.TextField(help_text='Enter a detailed description of the post')),
                ('image', models.ImageField(blank=True, help_text='Upload an image related to the post (optional)', null=True, upload_to='post_images/')),
                ('type', models.CharField(choices=[('Internship', 'Internship'), ('VolunteerWork', 'Volunteer Work')], max_length=20)),
                ('level', models.CharField(blank=True, choices=[('Entry', 'Entry Level'), ('Mid', 'Mid Level'), ('Senior', 'Senior Level')], max_length=20, null=True)),
                ('category', models.CharField(choices=[('Banking', 'Banking'), ('Business', 'Business'), ('Marketing', 'Marketing'), ('Data', 'Data'), ('Finance', 'Finance'), ('Security', 'Security'), ('Software Engineering', 'Software Engineering'), ('Other', 'Other')], max_length=20)),
                ('skills_gained', models.TextField(blank=True, help_text='Type skills gained after the post comma separated e.g problem solving, ', null=True)),
                ('duration', models.CharField(help_text="Enter the duration of the post (e.g., '3 months')", max_length=100)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.organization')),
            ],
            options={
                'ordering': ['-updated', '-created'],
                'get_latest_by': 'created',
            },
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_text', models.TextField(blank=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.applicant')),
                ('post', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='posts.post')),
            ],
            options={
                'verbose_name': 'Certificate',
                'verbose_name_plural': 'Certificates',
            },
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'accepted'), ('rejected', 'rejected')], default='pending', max_length=20)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.applicant')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='posts.post')),
            ],
        ),
        migrations.CreateModel(
            name='Requirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skills', models.BooleanField(default=False, help_text="Specify whether you want to inquire about the applicant's skills.")),
                ('cover_letter', models.BooleanField(default=False, help_text="Specify whether you want to inquire about the applicant's motivation for choosing your company.")),
                ('availability', models.BooleanField(default=False, help_text="Specify whether you want to inquire about the applicant's availability for the position.")),
                ('other', models.TextField(blank=True, help_text='Enter any other questions you want to ask applicants.', null=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='posts.post')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Enter the title of the task', max_length=255)),
                ('description', models.TextField(help_text='Enter a detailed description of the task')),
                ('resource_url', models.URLField(blank=True, help_text='Enter a URL for additional resources related to the task (if any)')),
                ('resource_video', models.URLField(blank=True, help_text='Enter a URL for a video resource related to the task (if any)')),
                ('duration', models.CharField(help_text="Enter the estimated duration of the task (e.g., '1 hour', '30 minutes')", max_length=100)),
                ('is_file', models.BooleanField(default=False, help_text='Do you want applicants to submit this task as a file e.g txt, pdf, patch, doc')),
                ('is_url', models.BooleanField(default=False, help_text='Do you want applicants to submit this task as a url for the solution e.g github link, google drive link')),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='posts.post')),
            ],
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'completed')], default='pending', max_length=20)),
                ('comment', models.TextField(blank=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='posts.post')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='posts.task')),
            ],
        ),
        migrations.CreateModel(
            name='TaskSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submited_url', models.URLField(blank=True, help_text="Submit solution's url", null=True)),
                ('submited_file', models.FileField(blank=True, help_text="Submit solution's file", null=True, upload_to='submissions/')),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submission', to='accounts.applicant')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submission', to='posts.task')),
            ],
        ),
    ]
